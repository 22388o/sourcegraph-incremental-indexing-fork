---
version: 1
interactions:
- request:
    body: '{"query":"\nfragment commit on Commit {\n  oid\n  message\n  messageHeadline\n  committedDate\n  pushedDate\n  url\n  committer
      {\n    avatarUrl\n    email\n    name\n    user {\n      ...actor\n    }\n  }\n}\n\nfragment
      review on PullRequestReview {\n  databaseId\n  author {\n    ...actor\n  }\n  authorAssociation\n  body\n  state\n  url\n  createdAt\n  updatedAt\n  commit
      {\n    ...commit\n  }\n  includesCreatedEdit\n}\n\nfragment timelineItems on
      PullRequestTimelineItems {\n  ... on AssignedEvent {\n    actor {\n      ...actor\n    }\n    assignee
      {\n      ...actor\n    }\n    createdAt\n  }\n  ... on ClosedEvent {\n    actor
      {\n      ...actor\n    }\n    createdAt\n    url\n  }\n  ... on IssueComment
      {\n    databaseId\n    author {\n      ...actor\n    }\n    authorAssociation\n    body\n    createdAt\n    editor
      {\n      ...actor\n    }\n    url\n    updatedAt\n    includesCreatedEdit\n    publishedAt\n  }\n  ...
      on RenamedTitleEvent {\n    actor {\n      ...actor\n    }\n    previousTitle\n    currentTitle\n    createdAt\n  }\n  ...
      on MergedEvent {\n    actor {\n      ...actor\n    }\n    mergeRefName\n    url\n    commit
      {\n      ...commit\n    }\n    createdAt\n  }\n  ... on PullRequestReview {\n    ...review\n  }\n  ...
      on PullRequestReviewThread {\n    comments(last: 100) {\n      nodes {\n        databaseId\n        author
      {\n          ...actor\n        }\n        authorAssociation\n        editor
      {\n          ...actor\n        }\n        commit {\n          ...commit\n        }\n        body\n        state\n        url\n        createdAt\n        updatedAt\n        includesCreatedEdit\n      }\n    }\n  }\n  ...
      on ReopenedEvent {\n    actor {\n      ...actor\n    }\n    createdAt\n  }\n  ...
      on ReviewDismissedEvent {\n    actor {\n      ...actor\n    }\n    review {\n      ...review\n    }\n    dismissalMessage\n    createdAt\n  }\n  ...
      on ReviewRequestRemovedEvent {\n    actor {\n      ...actor\n    }\n    requestedReviewer
      {\n      ...actor\n    }\n    requestedTeam: requestedReviewer {\n      ...
      on Team {\n        name\n        url\n        avatarUrl\n      }\n    }\n    createdAt\n  }\n  ...
      on ReviewRequestedEvent {\n    actor {\n      ...actor\n    }\n    requestedReviewer
      {\n      ...actor\n    }\n    requestedTeam: requestedReviewer {\n      ...
      on Team {\n        name\n        url\n        avatarUrl\n      }\n    }\n    createdAt\n  }\n  ...
      on ReadyForReviewEvent {\n    actor {\n      ...actor\n    }\n    createdAt\n  }\n  ...
      on UnassignedEvent {\n    actor {\n      ...actor\n    }\n    assignee {\n      ...actor\n    }\n    createdAt\n  }\n  ...
      on LabeledEvent {\n    actor {\n      ...actor\n    }\n    label {\n      ...label\n    }\n    createdAt\n  }\n  ...
      on UnlabeledEvent {\n    actor {\n      ...actor\n    }\n    label {\n      ...label\n    }\n    createdAt\n  }\n  ...
      on PullRequestCommit {\n    commit {\n      ...commit\n    }\n  }\n  \n  ...
      on ConvertToDraftEvent {\n    actor {\n\t  ...actor\n\t}\n\tcreatedAt\n  }\n\n}\n\nfragment
      actor on Actor {\n  avatarUrl\n  login\n  url\n}\n\nfragment label on Label
      {\n  name\n  color\n  description\n  id\n}\n\nfragment commitWithChecks on Commit
      {\n  oid\n  status {\n    state\n    contexts {\n      id\n      context\n      state\n      description\n    }\n  }\n  checkSuites(last:
      20) {\n    nodes {\n      id\n      status\n      conclusion\n      checkRuns(last:
      20) {\n        nodes {\n          id\n          status\n          conclusion\n        }\n      }\n    }\n  }\n  committedDate\n}\n\nfragment
      prCommit on PullRequestCommit {\n  commit {\n    ...commitWithChecks\n  }\n}\n\nfragment
      pr on PullRequest {\n  id\n  title\n  body\n  state\n  url\n  number\n  createdAt\n  updatedAt\n  headRefOid\n  baseRefOid\n  headRefName\n  baseRefName\n  isDraft\n  author
      {\n    ...actor\n    ... on User {\n      email\n    }\n  }\n  participants(first:
      100) {\n    nodes {\n      ...actor\n    }\n  }\n  labels(first: 100) {\n    nodes
      {\n      ...label\n    }\n  }\n  commits(last: 1) {\n    nodes {\n      ...prCommit\n    }\n  }\n  timelineItems(first:
      250, itemTypes: [ASSIGNED_EVENT, CLOSED_EVENT, ISSUE_COMMENT, RENAMED_TITLE_EVENT,
      MERGED_EVENT, PULL_REQUEST_REVIEW, PULL_REQUEST_REVIEW_THREAD, REOPENED_EVENT,
      REVIEW_DISMISSED_EVENT, REVIEW_REQUEST_REMOVED_EVENT, REVIEW_REQUESTED_EVENT,
      UNASSIGNED_EVENT, LABELED_EVENT, UNLABELED_EVENT, PULL_REQUEST_COMMIT, READY_FOR_REVIEW_EVENT,
      CONVERT_TO_DRAFT_EVENT]) {\n    pageInfo {\n      hasNextPage\n      endCursor\n    }\n    nodes
      {\n      __typename\n      ...timelineItems\n    }\n  }\n}\nmutation\tCreatePullRequest($input:CreatePullRequestInput!)
      {\n  createPullRequest(input:$input) {\n    pullRequest {\n      ... pr\n    }\n  }\n}","variables":{"input":{"baseRefName":"master","body":"This
      is the description of the test PR","draft":false,"headRefName":"test-pr-7","repositoryId":"MDEwOlJlcG9zaXRvcnkyMjExNDc1MTM=","title":"This
      is a test PR"}}}'
    form: {}
    headers:
      Accept:
      - application/vnd.github.antiope-preview+json
      Content-Type:
      - application/json; charset=utf-8
    url: https://api.github.com/graphql
    method: POST
  response:
    body: '{"data":{"createPullRequest":{"pullRequest":{"id":"MDExOlB1bGxSZXF1ZXN0NTc3Nzc3NzEy","title":"This
      is a test PR","body":"This is the description of the test PR","state":"OPEN","url":"https://github.com/sourcegraph/automation-testing/pull/424","number":424,"createdAt":"2021-02-22T16:40:45Z","updatedAt":"2021-02-22T16:40:45Z","headRefOid":"81da5d9c265d943d33a6bbed9da18da16f3ac633","baseRefOid":"53229c4dc5ba7c0f7abf109003aa15a956be485e","headRefName":"test-pr-7","baseRefName":"master","isDraft":false,"author":{"avatarUrl":"https://avatars.githubusercontent.com/u/229984?v=4","login":"LawnGnome","url":"https://github.com/LawnGnome","email":"adam@adamharvey.name"},"participants":{"nodes":[{"avatarUrl":"https://avatars.githubusercontent.com/u/229984?v=4","login":"LawnGnome","url":"https://github.com/LawnGnome"},{"avatarUrl":"https://avatars.githubusercontent.com/u/1185253?u=35f048c505007991433b46c9c0616ccbcfbd4bff&v=4","login":"mrnugget","url":"https://github.com/mrnugget"}]},"labels":{"nodes":[]},"commits":{"nodes":[{"commit":{"oid":"81da5d9c265d943d33a6bbed9da18da16f3ac633","status":null,"checkSuites":{"nodes":[{"id":"MDEwOkNoZWNrU3VpdGUyMDk2NjY1OTU4","status":"QUEUED","conclusion":null,"checkRuns":{"nodes":[]}},{"id":"MDEwOkNoZWNrU3VpdGUyMDk2NjY1OTYx","status":"QUEUED","conclusion":null,"checkRuns":{"nodes":[]}},{"id":"MDEwOkNoZWNrU3VpdGUyMDk2NjY1OTYy","status":"QUEUED","conclusion":null,"checkRuns":{"nodes":[]}}]},"committedDate":"2021-02-22T16:39:56Z"}}]},"timelineItems":{"pageInfo":{"hasNextPage":false,"endCursor":"Y3Vyc29yOnYyOpPPAAABd8qcl2AH2gAyNTc3Nzc3NzEyOjgxZGE1ZDljMjY1ZDk0M2QzM2E2YmJlZDlkYTE4ZGExNmYzYWM2MzM="},"nodes":[{"__typename":"PullRequestCommit","commit":{"oid":"81da5d9c265d943d33a6bbed9da18da16f3ac633","message":"Push
      a new branch","messageHeadline":"Push a new branch","committedDate":"2021-02-22T16:39:56Z","pushedDate":"2021-02-22T16:40:00Z","url":"https://github.com/sourcegraph/automation-testing/commit/81da5d9c265d943d33a6bbed9da18da16f3ac633","committer":{"avatarUrl":"https://avatars.githubusercontent.com/u/1185253?v=4","email":"mrnugget@gmail.com","name":"Thorsten
      Ball","user":{"avatarUrl":"https://avatars.githubusercontent.com/u/1185253?u=35f048c505007991433b46c9c0616ccbcfbd4bff&v=4","login":"mrnugget","url":"https://github.com/mrnugget"}}}}]}}}}}'
    headers:
      Access-Control-Allow-Origin:
      - '*'
      Access-Control-Expose-Headers:
      - ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining,
        X-RateLimit-Used, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes,
        X-Poll-Interval, X-GitHub-Media-Type, Deprecation, Sunset
      Cache-Control:
      - no-cache
      Content-Security-Policy:
      - default-src 'none'
      Content-Type:
      - application/json; charset=utf-8
      Date:
      - Mon, 22 Feb 2021 16:40:46 GMT
      Referrer-Policy:
      - origin-when-cross-origin, strict-origin-when-cross-origin
      Server:
      - GitHub.com
      Strict-Transport-Security:
      - max-age=31536000; includeSubdomains; preload
      Vary:
      - Accept-Encoding, Accept, X-Requested-With
      X-Accepted-Oauth-Scopes:
      - repo
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - deny
      X-Github-Media-Type:
      - github.v4; param=antiope-preview; format=json
      X-Github-Request-Id:
      - B98A:15DC:9DCC48:B8350F:6033DE8D
      X-Oauth-Scopes:
      - read:discussion, read:org, read:packages, read:public_key, read:repo_hook,
        read:user, repo, workflow
      X-Ratelimit-Used:
      - "3"
      X-Xss-Protection:
      - 1; mode=block
    status: 200 OK
    code: 200
    duration: ""
