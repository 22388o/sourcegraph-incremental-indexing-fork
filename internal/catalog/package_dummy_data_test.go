package catalog

import (
	"context"
	"reflect"
	"sort"
	"testing"

	"github.com/google/go-cmp/cmp"
)

func TestGetPackages(t *testing.T) {
	ctx := context.Background()
	pkgs, err := GetPackages(ctx)
	if err != nil {
		t.Fatal(err)
	}

	sort.Slice(pkgs, func(i, j int) bool { return pkgs[i].Name < pkgs[j].Name })

	if len, want := len(pkgs), 3420; len != want {
		t.Errorf("got len %d, want %d", len, want)
	}

	sample := func(pkgs []Package) []Package {
		return []Package{pkgs[0], pkgs[1500], pkgs[3157]}
	}
	got3 := sample(pkgs)
	want3 := []Package{
		{Name: "@actions/core"},
		{Name: "github.com/RoaringBitmap/roaring"},
		{Name: "ts-dedent"},
	}
	if !reflect.DeepEqual(got3, want3) {
		t.Errorf("got first 3 %v, want %v", got3, want3)
	}
}

func TestParseYarnLockfile(t *testing.T) {
	const yarnLockfile = `# THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.
# yarn lockfile v1


"@babel/code-frame@^7.0.0", "@babel/code-frame@^7.10.4", "@babel/code-frame@^7.12.13", "@babel/code-frame@^7.14.5", "@babel/code-frame@^7.5.5", "@babel/code-frame@^7.8.3":
  version "7.14.5"
  resolved "https://registry.npmjs.org/@babel/code-frame/-/code-frame-7.14.5.tgz#23b08d740e83f49c5e59945fbf1b43e80bbf4edb"
  integrity sha512-9pzDqyc6OLDaqe+zbACgFkb6fKMNG6CObKpnYXChRsvYGyEdc7CA2BaqeOM+vOtCS5ndmJicPJhKAwYRI6UfFw==
  dependencies:
    "@babel/highlight" "^7.14.5"

foo@^7.12.1:
  version "7.14.0"
  resolved "https://registry.npmjs.org/@babel/compat-data/-/compat-data-7.14.0.tgz#a901128bce2ad02565df95e6ecbf195cf9465919"
  integrity sha512-vu9V3uMM/1o5Hl5OekMUowo3FqXLJSw+s+66nt0fSWVWTtmosdzn45JHOB3cPtZoe6CTBDzvSw0RdOY85Q37+Q==
`

	entries, err := parseYarnLockfile([]byte(yarnLockfile))
	if err != nil {
		t.Fatal(err)
	}

	want := []*YarnLockfileEntry{
		{
			Name:             "@babel/code-frame",
			Version:          "7.14.5",
			NameVersionSpecs: []string{"@babel/code-frame@^7.0.0", "@babel/code-frame@^7.10.4", "@babel/code-frame@^7.12.13", "@babel/code-frame@^7.14.5", "@babel/code-frame@^7.5.5", "@babel/code-frame@^7.8.3"},
		},
		{
			Name:             "foo",
			Version:          "7.14.0",
			NameVersionSpecs: []string{"foo@^7.12.1"},
		},
	}
	if diff := cmp.Diff(entries, want); diff != "" {
		t.Error(diff)
	}
}
